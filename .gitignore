# SHPE FAU Tech Management System - Security & Dependencies
# ========================================================

# Environment Variables & API Keys
# ---------------------------------
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.example.local

# Supabase Configuration (if using separate config files)
supabase.config.js
supabase.config.local.js
config/database.js
config/secrets.js

# Node.js Dependencies
# --------------------
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime & Logs
# ---------------
logs
*.log
pids
*.pid
*.seed
*.pid.lock

# Build Output
# ------------
build/
dist/
out/

# React Build Files
# -----------------
.cache/
.parcel-cache/

# Testing
# -------
coverage/
.nyc_output
.coverage/
*.lcov

# IDE & Editor Files
# ------------------
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
# -----
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
# -------
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
# -----
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Temporary Files
# ---------------
*.tmp
*.temp
.tmp/
.temp/

# Package Managers
# ----------------
.npm
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# ESLint
# ------
.eslintcache

# Optional REPL history
# ---------------------
.node_repl_history

# Output of 'npm pack'
# --------------------
*.tgz

# Yarn Integrity file
# -------------------
.yarn-integrity

# dotenv environment variables file
# ---------------------------------
.env

# Stores VSCode versions used for testing VSCode extensions
# ---------------------------------------------------------
.vscode-test

# Microbundle cache
# -----------------
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional eslint cache
# ---------------------
.eslintcache

# Optional REPL history
# ---------------------
.node_repl_history

# Output of 'npm pack'
# --------------------
*.tgz

# Yarn Integrity file
# -------------------
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
# --------------------------------------------
.cache
.parcel-cache

# next.js build output
# --------------------
.next

# nuxt.js build output
# --------------------
.nuxt

# vuepress build output
# ---------------------
.vuepress/dist

# Serverless directories
# ----------------------
.serverless

# FuseBox cache
# -------------
.fusebox/

# DynamoDB Local files
# --------------------
.dynamodb/

# TernJS port file
# ----------------
.tern-port

# Backup Files & Archives
# -----------------------
*.backup
*.bak
*.tar.gz
*.zip
*.rar

# Database Files (if any)
# -----------------------
*.db
*.sqlite
*.sqlite3

# Security & Sensitive Data
# -------------------------
# API Keys and secrets
secrets/
keys/
certificates/
*.pem
*.key
*.crt
*.cert

# User-specific files
# -------------------
*.suo
*.user
*.userosscache
*.sln.docstates

# Project-specific ignores
# ------------------------
# Supabase local development (if using Supabase CLI)
supabase/.branches
supabase/.temp

# Workshop materials with sensitive data
workshops/private/
materials/sensitive/

# Team member contact information
team/contacts/
members/private/

# Meeting notes with sensitive content
meetings/private/
notes/confidential/

# Deployment scripts with credentials
deploy/
scripts/deploy/
.deployment

# Local configuration overrides
config.local.json
settings.local.json

# Analytics and tracking (if any)
analytics/
tracking/
*.analytics

# Performance monitoring files
monitoring/
metrics/

# Experimental or development features
experimental/
dev-features/
playground/

# Third-party integrations with API keys
integrations/
plugins/private/

# IMPORTANT SECURITY REMINDERS
# =============================
# 1. Never commit API keys, passwords, or tokens
# 2. Use environment variables for all sensitive data
# 3. Regularly rotate API keys and access tokens
# 4. Review commits before pushing to ensure no secrets
# 5. Use tools like git-secrets for additional protection